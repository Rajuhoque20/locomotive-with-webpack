.InputName-container{
    display: flex;
width: fit-content;
height: 44px;
padding: 0px 8px 0px 20px;
align-items: center;
border-radius: 12px;
background: var(--Recessed, linear-gradient(0deg, var(--Border-Border-Transparent, rgba(0, 0, 0, 0.10)) 0%, var(--Border-Border-Transparent, rgba(0, 0, 0, 0.10)) 100%), rgba(10, 32, 255, 0.50));
background-blend-mode: luminosity, color-burn;
box-shadow: 0px -0.5px 1px 0px rgba(255, 255, 255, 0.30) inset, 0px -0.5px 1px 0px rgba(255, 255, 255, 0.25) inset, 1px 1.5px 4px 0px rgba(0, 0, 0, 0.08) inset, 1px 1.5px 4px 0px rgba(0, 0, 0, 0.10) inset;
}
.InputName-container input{
    /* background: var(--Recessed, linear-gradient(0deg, var(--Border-Border-Transparent, rgba(0, 0, 0, 0.10)) 0%, var(--Border-Border-Transparent, rgba(0, 0, 0, 0.10)) 100%), rgba(10, 32, 255, 0.50));
    background-blend-mode: luminosity, color-burn;
box-shadow: 0px -0.5px 1px 0px rgba(255, 255, 255, 0.30) inset, 0px -0.5px 1px 0px rgba(255, 255, 255, 0.25) inset, 1px 1.5px 4px 0px rgba(0, 0, 0, 0.08) inset, 1px 1.5px 4px 0px rgba(0, 0, 0, 0.10) inset; */

    
}
.InputName-container img{
    width: 1.5rem;
    height: 1.5rem;
}
.InputName-container input:focus {
    outline: none;
}
.InputName-container input{
    all:unset;
    height: 44px;
    color: white;
}

.HeadingLabel {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    width: 100%;
}
.HeadingLabel img {
    width: 1rem;
    height: 1rem;
}
.HeadingLable-border{
    border: 0.5px solid rgb(243, 232, 232);
    width: 80%;
}
.HeadingLabel span{
   white-space: nowrap;
   color: white;
}